#!/usr/bin/env python
# -*- encoding: utf-8 -*-
# Michel Mooij, michel.mooij7@gmail.com

import os
import sys
import waftools


top = '.'
out = 'build'
prefix = 'output'


VERSION = waftools.version
APPNAME = 'waftools-test'


def options(opt):
	opt.add_option('--prefix', dest='prefix', default=prefix, help='installation prefix [default: %r]' % prefix)
	opt.load('gnucc', tooldir=waftools.location) # selects GNU as default C/C++ compiler
	opt.load('cppcheck', tooldir=waftools.location)
	opt.load('doxygen', tooldir=waftools.location)
	opt.load('package', tooldir=waftools.location)
	opt.load('export', tooldir=waftools.location)
	opt.load('codeblocks', tooldir=waftools.location)
	opt.load('eclipse', tooldir=waftools.location)
	if sys.platform == 'win32':
		opt.load('msdev', tooldir=waftools.location)
	opt.load('cmake', tooldir=waftools.location)
	opt.load('makefile', tooldir=waftools.location)
	opt.load('tree', tooldir=waftools.location)


def configure(conf):
	conf.check_waf_version(mini='1.7.0')
	prefix = conf.env.PREFIX
	conf.load('compiler_c')
	conf.load('compiler_cxx')
	conf.load('cppcheck')
	conf.load('doxygen')
	conf.load('package')
	conf.load('export')
	conf.load('cmake')
	conf.load('makefile')
	conf.load('codeblocks')
	conf.load('eclipse')
	if sys.platform == 'win32':
		conf.load('msdev')
	conf.load('tree')
	conf.load('gnucc')


def build(bld):
	scripts = waftools.get_scripts('components', 'wscript')
	for script in scripts:
		bld.recurse(script)


def dist(ctx):
	ctx.algo = 'tar.gz'
	ctx.excl = ' **/*~ **/.lock-w* **/CVS/** **/.svn/** downloads/** ext/** build/** tmp/**'


